{"version":3,"sources":["webpack:///src/app/pages/outbound/sales-order/sales-order.component.html","webpack:///src/app/pages/outbound/sales-order/sales-order.component.ts","webpack:///src/app/pages/outbound/sales-order/sales-order.module.ts","webpack:///src/app/service/sales-order.service.ts"],"names":["SalesOrderComponent","paginationService","salesOrderService","PageTitle","loadform","loadingState","objectArray","headerData","pagination","searchText","currentPage","permissionObject","setHeaderData","getObjects","push","label","key","viewUrl","path","id","canEdit","canView","canDelete","actions","actionColom","params","page","search","getSalesOrderList","subscribe","response","success","data","list","getPager","error","text","selector","template","routes","component","title","loadChildren","then","m","AddSalesOrderModule","SalesOrderViewModule","SalesOrderModule","declarations","imports","forChild","providers","SalesOrderService","http","API_URL","APIEndpoint","param","get","post","put","delete"],"mappings":"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","file":"sales-order-sales-order-module-es5.js","sourcesContent":["export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"page-header\\\">\\r\\n    <div class=\\\"row m-0\\\">\\r\\n      <h2 class=\\\"mr-auto\\\">{{PageTitle}}</h2>\\r\\n      <div class=\\\"ml-3\\\">\\r\\n        <!-- <app-search></app-search> -->\\r\\n      </div>\\r\\n      <div class=\\\"ml-3\\\">\\r\\n        <app-btn-add [btnName]=\\\"'Add Sales Order'\\\" [editData]=\\\"'/outbound/sales-order/add'\\\">\\r\\n        </app-btn-add>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <app-table-list [headerData]=\\\"headerData\\\" [rawData]=\\\"objectArray\\\" (reloadEvent)=\\\"onReloadEvent()\\\">\\r\\n      </app-table-list>\\r\\n      <pagination [paginationList]=\\\"pagination\\\" [currentPage]=\\\"currentPage\\\" (onPageChange)=\\\"getPage($event)\\\">\\r\\n      </pagination>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { PaginationService } from 'src/app/service/pagination.service';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { TextField, ActionField, TextViewUrlField, DateField, StatusField } from 'src/app/common-module/table-list/list-field-type';\r\nimport { SalesOrderService } from 'src/app/service/sales-order.service';\r\n\r\n@Component({\r\n  selector: 'app-sales-order',\r\n  templateUrl: './sales-order.component.html'\r\n})\r\nexport class SalesOrderComponent implements OnInit {\r\n\r\n  PageTitle = \"Manage Sales Order\"\r\n\r\n  loadform = false;\r\n  loadingState = true;\r\n  objectArray: Array<any> = [];\r\n  headerData: Array<any> = [];\r\n  pagination: any = null;\r\n  searchText: any = null;\r\n  currentPage: any = 1;\r\n\r\n  permissionObject: any = null;\r\n  constructor(\r\n    private paginationService: PaginationService,\r\n    private salesOrderService: SalesOrderService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.dataService.permission.subscribe((perms) => {\r\n    //   this.permissionObject = perms['activity'];\r\n    // });\r\n    this.setHeaderData();\r\n    this.loadform = false;\r\n    this.getObjects();\r\n  }\r\n\r\n  setHeaderData() {\r\n    this.headerData.push(\r\n\r\n      new TextViewUrlField({\r\n        label: \"Sales Order No\",\r\n        key: \"sales_order_no\",\r\n        viewUrl: {\r\n          path: '/outbound/sales-order/view/',\r\n          id: 'sales_order_id'\r\n        }\r\n      }),\r\n      new TextField({\r\n        label: \"Transfer Order No\",\r\n        key: '',\r\n      }),\r\n      new DateField({\r\n        label: \"Order Date\",\r\n        key: \"sales_order_date\",\r\n      }),\r\n      new TextField({\r\n        label: \"Client Name\",\r\n        key: 'client.label',\r\n      }),\r\n\r\n      new DateField({\r\n        label: \"Picking Date\",\r\n        key: \"sales_order_date\",\r\n      }),\r\n\r\n      \r\n\r\n    );\r\n    let canEdit = true;\r\n    let canView = true;\r\n    let canDelete = true;\r\n    let actions = {};\r\n    if (canEdit) {\r\n      actions['edit'] = {\r\n        path: '/outbound/sales-order/edit/',\r\n        id: 'sales_order_id'\r\n      }\r\n    }\r\n    if (canView) {\r\n      actions['view'] = {\r\n        path: '/outbound/sales-order/view/',\r\n        id: 'sales_order_id'\r\n      }\r\n    }\r\n    if (canDelete) {\r\n      actions['delete'] = {\r\n        path: 'sales-order/',\r\n        id: 'sales_order_id'\r\n      }\r\n    }\r\n    let actionColom = new ActionField(actions);\r\n    this.headerData.push(\r\n      actionColom\r\n    );\r\n  }\r\n\r\n\r\n  getObjects() {\r\n    const params: any = { page: this.currentPage };\r\n    if (this.searchText) {\r\n      params.search = this.searchText;\r\n    }\r\n    this.salesOrderService.getSalesOrderList(params).subscribe((response) => {\r\n      this.loadingState = false;\r\n      if (response.success && response.data) {\r\n        this.objectArray = response.data.list;\r\n        this.pagination = this.paginationService.getPager(response.data.pagination['total_page'], this.currentPage);\r\n      } else {\r\n        this.objectArray = [];\r\n        this.pagination = null;\r\n      }\r\n    }, (error) => {\r\n      this.loadingState = false;\r\n      this.objectArray = [];\r\n      this.pagination = null;\r\n\r\n    });\r\n  }\r\n\r\n  getPage(page: number) {\r\n    this.currentPage = page;\r\n    // this.currentPage = 1;\r\n    this.getObjects();\r\n  }\r\n\r\n  onReloadEvent() {\r\n    this.getObjects();\r\n  }\r\n\r\n  searchObject(text) {\r\n    this.searchText = text;\r\n    this.currentPage = 1;\r\n    this.getObjects();\r\n  }\r\n  ngAfterViewChecked(): void {\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SalesOrderComponent } from './sales-order.component';\r\nimport { SearchModule } from 'src/app/common-module/search/search.module';\r\nimport { BtnAddModule } from 'src/app/common-module/btn-add/btn-add.module';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TableListModule } from 'src/app/common-module/table-list/table-list.module';\r\nimport { PaginationModule } from 'src/app/common-module/pagination/pagination.module';\r\nimport { SalesOrderService } from 'src/app/service/sales-order.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SalesOrderComponent,\r\n    data: { title: 'sales_order_list' },\r\n  },\r\n  {\r\n    path: 'add',\r\n    loadChildren: () => import('./add-sales-order/add-sales-order.module').then(m => m.AddSalesOrderModule),\r\n    data: { title: 'add_sales_order' },\r\n \r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    loadChildren: () => import('./add-sales-order/add-sales-order.module').then(m => m.AddSalesOrderModule),\r\n    data: { title: 'edit_sales_order' },\r\n \r\n  },\r\n  {\r\n    path: 'view/:id',\r\n    loadChildren: () => import('./sales-order-view/sales-order-view.module').then(m => m.SalesOrderViewModule),\r\n    data: { title: 'view_sales_order' },\r\n\r\n  }\r\n\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [SalesOrderComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SearchModule,\r\n    BtnAddModule,\r\n    TableListModule,\r\n    PaginationModule,\r\n    RouterModule.forChild(routes)\r\n  ], providers: [SalesOrderService]\r\n})\r\nexport class SalesOrderModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class SalesOrderService {\r\n\r\n  API_URL: string = environment.APIEndpoint;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  getSalesOrderList(param): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/sales-order`, { params: param });\r\n  }\r\n\r\n  addSalesOrder(data): Observable<any> {\r\n    return this.http.post(`${this.API_URL}/sales-order`, data);\r\n  }\r\n\r\n  editSalesOrder(id, data): Observable<any> {\r\n    return this.http.put(`${this.API_URL}/sales-order/${id}`, data);\r\n  }\r\n\r\n  getSalesOrderById(id, param = null): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/sales-order/${id}`, { params: param });\r\n  }\r\n\r\n  getSalesOrderViewById(id): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/sales-order/${id}/view`);\r\n  }\r\n\r\n  getShippingAddressData(id): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/sales-order/shipping-address/${id}`);\r\n  }\r\n\r\n  getSalesOrderMasterData(): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/sales-order/master-data`);\r\n  }\r\n\r\n  \r\n\r\n  deleteSalesOrder(id): Observable<any> {\r\n    return this.http.delete(`${this.API_URL}/sales-order/${id}`);\r\n  }\r\n\r\n  // Product\r\n\r\n  getSalesOrderProductList(param = null): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/sales-order-detail`, { params: param });\r\n  }\r\n  getSalesOrderProductMasterData(param = null): Observable<any> {\r\n    return this.http.get(`${this.API_URL}/sales-order-detail/master-data`, { params: param });\r\n  }\r\n\r\n  editSalesOrderProduct(id, data): Observable<any> {\r\n    return this.http.put(`${this.API_URL}/sales-order-detail/${id}`, data);\r\n  }\r\n\r\n  addSalesOrderProduct(data): Observable<any> {\r\n    return this.http.post(`${this.API_URL}/sales-order-detail`, data);\r\n  }\r\n\r\n  deleteSalesOrderProduct(id): Observable<any> {\r\n    return this.http.delete(`${this.API_URL}/sales-order-detail/${id}`);\r\n  }\r\n\r\n\r\n\r\n}\r\n"]}